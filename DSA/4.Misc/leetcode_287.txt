class Solution {
    public int findDuplicate(int[] nums) {
        // [1,3,4,2,2]        
        int i=0;
        while(i<nums.length) {
            int num = nums[i];
            int correctpos = num-1;
            // check if the current num is in its correct position or not , if it is move ahead
            if(num == nums[correctpos]) i++;
            // otherwise swap this number with the number in its correctposition, keep doing this until this number is in its correct position
            else {
                int temp = nums[correctpos];
                nums[correctpos] = num;
                nums[i] = temp;
            }
        }
        // last we will be left with repeated num in the wrong place , and the other numbers in their correct positions;
        return nums[i-1];
    }
}


// Floyd (Tortoise , hare)
 class Solution {
    public int findDuplicate(int[] nums) {
      // [1,3,4,2,2] 
      int slow = 0, fast = 0;
      do {
          slow = nums[slow];
          fast = nums[nums[fast]];
      } while(slow != fast);

      int temp = 0;
      while(temp!=slow) {
          temp = nums[temp];
          slow = nums[slow];
      }
      return slow;
    }
}
